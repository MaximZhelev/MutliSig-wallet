/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "Execute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "Revoke",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "Submit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015d1380380620015d1833981016040819052620000349162000287565b60008251116200007d5760405162461bcd60e51b815260206004820152600f60248201526e13dddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b6000811180156200008f575081518111155b620000e75760405162461bcd60e51b815260206004820152602160248201527f496e76616c6964207265717569726564206e756d626572206f66206f776e65726044820152607360f81b606482015260840162000074565b60005b8251811015620002495760008382815181106200010b576200010b62000361565b6020026020010151905060006001600160a01b0316816001600160a01b031603620001695760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001d45760405162461bcd60e51b815260206004820152601360248201527f4f776e6572206973206e6f7420756e6971756500000000000000000000000000604482015260640162000074565b6001600160a01b031660008181526001602081905260408220805460ff191682179055815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b031916909117905580620002408162000377565b915050620000ea565b50600255506200039f565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028257600080fd5b919050565b600080604083850312156200029b57600080fd5b82516001600160401b0380821115620002b357600080fd5b818501915085601f830112620002c857600080fd5b8151602082821115620002df57620002df62000254565b8160051b604051601f19603f8301168101818110868211171562000307576200030762000254565b6040529283528183019350848101820192898411156200032657600080fd5b948201945b838610156200034f576200033f866200026a565b855294820194938201936200032b565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200039857634e487b7160e01b600052601160045260246000fd5b5060010190565b61122280620003af6000396000f3fe60806040526004361061009a5760003560e01c80638253951a11610069578063b759f9541161004e578063b759f95414610212578063dc8452cd14610232578063fe0d94c11461025657600080fd5b80638253951a146101a75780639ace38c2146101e257600080fd5b8063025e7c27146100db57806314de327f1461012557806320c5429b146101475780632f54bf6e1461016757600080fd5b366100d65760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2005b600080fd5b3480156100e757600080fd5b506100fb6100f6366004610e49565b610276565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561013157600080fd5b50610145610140366004610e8b565b6102ad565b005b34801561015357600080fd5b50610145610162366004610e49565b61048f565b34801561017357600080fd5b50610197610182366004610f12565b60016020526000908152604090205460ff1681565b604051901515815260200161011c565b3480156101b357600080fd5b506101976101c2366004610f34565b600460209081526000928352604080842090915290825290205460ff1681565b3480156101ee57600080fd5b506102026101fd366004610e49565b6106f5565b60405161011c9493929190610f60565b34801561021e57600080fd5b5061014561022d366004610e49565b6107d4565b34801561023e57600080fd5b5061024860025481565b60405190815260200161011c565b34801561026257600080fd5b50610145610271366004610e49565b610a41565b6000818154811061028657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b3360009081526001602052604090205460ff1661032b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74206f776e6572000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600360405180608001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505050602091820181905283546001808201865594825290829020835160049092020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911781558282015193810193909355604082015180519293926104199260028501920190610db0565b5060609190910151600391820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555461046090600190611037565b6040517f08324b3d745b914e3abd4ffbfead91e3b78391a98c173202129215ab933adfbe90600090a250505050565b3360009081526001602052604090205460ff16610508576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610322565b60035481908110610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f747820646f6573206e6f742065786973740000000000000000000000000000006044820152606401610322565b81600381815481106105895761058961104e565b600091825260209091206003600490920201015460ff1615610607576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f747820616c7265616479206578656375746564000000000000000000000000006044820152606401610322565b600083815260046020908152604080832033845290915290205460ff1661068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7478206e6f7420617070726f76656400000000000000000000000000000000006044820152606401610322565b600083815260046020908152604080832033808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555185927fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b91a3505050565b6003818154811061070557600080fd5b600091825260209091206004909102018054600182015460028301805473ffffffffffffffffffffffffffffffffffffffff90931694509092916107489061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546107749061107d565b80156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b5050506003909301549192505060ff1684565b3360009081526001602052604090205460ff1661084d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610322565b600354819081106108ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f747820646f6573206e6f742065786973740000000000000000000000000000006044820152606401610322565b6000828152600460209081526040808320338452909152902054829060ff1615610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f747820616c726561647920617070726f766564000000000000000000000000006044820152606401610322565b82600381815481106109545761095461104e565b600091825260209091206003600490920201015460ff16156109d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f747820616c7265616479206578656375746564000000000000000000000000006044820152606401610322565b600084815260046020908152604080832033808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555186927f90ec57f18fa7b15c6b8d5e4d1deb90796c74b2ff23d4d0cecad0cb42a96b312891a350505050565b60035481908110610aae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f747820646f6573206e6f742065786973740000000000000000000000000000006044820152606401610322565b8160038181548110610ac257610ac261104e565b600091825260209091206003600490920201015460ff1615610b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f747820616c7265616479206578656375746564000000000000000000000000006044820152606401610322565b600254610b4c84610d1b565b1015610bb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f617070726f76616c73203c2072657175697265640000000000000000000000006044820152606401610322565b600060038481548110610bc957610bc961104e565b600091825260208220600360049092020190810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915581549082015460405192945073ffffffffffffffffffffffffffffffffffffffff90911691610c3c9060028601906110ca565b60006040518083038185875af1925050503d8060008114610c79576040519150601f19603f3d011682016040523d82523d6000602084013e610c7e565b606091505b5050905080610ce9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7478206661696c656400000000000000000000000000000000000000000000006044820152606401610322565b60405185907fddb556f1d2c1ec821e910b019d3685b229db152a0ecd517ca7e24b8bd713928990600090a25050505050565b6000805b600054811015610daa57600460008481526020019081526020016000206000808381548110610d5057610d5061104e565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260400190205460ff1615610d9857610d9560018361119c565b91505b80610da2816111b4565b915050610d1f565b50919050565b828054610dbc9061107d565b90600052602060002090601f016020900481019282610dde5760008555610e24565b82601f10610df757805160ff1916838001178555610e24565b82800160010185558215610e24579182015b82811115610e24578251825591602001919060010190610e09565b50610e30929150610e34565b5090565b5b80821115610e305760008155600101610e35565b600060208284031215610e5b57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e8657600080fd5b919050565b60008060008060608587031215610ea157600080fd5b610eaa85610e62565b935060208501359250604085013567ffffffffffffffff80821115610ece57600080fd5b818701915087601f830112610ee257600080fd5b813581811115610ef157600080fd5b886020828501011115610f0357600080fd5b95989497505060200194505050565b600060208284031215610f2457600080fd5b610f2d82610e62565b9392505050565b60008060408385031215610f4757600080fd5b82359150610f5760208401610e62565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015260806040840152845180608085015260005b81811015610fb05786810183015185820160a001528201610f94565b81811115610fc257600060a083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016830160a0019150610fff9050606083018415159052565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561104957611049611008565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061109157607f821691505b602082108103610daa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080835481600182811c9150808316806110e657607f831692505b6020808410820361111e577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561113257600181146111615761118e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061118e565b60008a81526020902060005b868110156111865781548b82015290850190830161116d565b505084890196505b509498975050505050505050565b600082198211156111af576111af611008565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111e5576111e5611008565b506001019056fea26469706673582212203a60aaf9d44f6089c79588f46fec23c7dababafafe32214ec8188fc2d47794aa64736f6c634300080d0033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: PromiseOrValue<string>[],
    _required: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWallet> {
    return super.deploy(
      _owners,
      _required,
      overrides || {}
    ) as Promise<MultiSigWallet>;
  }
  override getDeployTransaction(
    _owners: PromiseOrValue<string>[],
    _required: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owners, _required, overrides || {});
  }
  override attach(address: string): MultiSigWallet {
    return super.attach(address) as MultiSigWallet;
  }
  override connect(signer: Signer): MultiSigWallet__factory {
    return super.connect(signer) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new utils.Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MultiSigWallet;
  }
}
